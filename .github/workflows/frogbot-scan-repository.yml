name: "Frogbot Security Scan Workflow"

on:
  pull_request_target: 
    # Triggers scan-pr flow for every opened/updated pull request
    types: [opened, synchronize] 
  push: 
    # Triggers scan-repo flow for every push to the specified branches
    branches:
      - rbathiya/frogbot
  schedule:
    # The repository will be scanned every Monday at 00:00 GMT (Can be change according to your needs).
    - cron: "0 0 * * 1"
  workflow_dispatch: # The repository will be scanned on demand

permissions:
  contents: write
  pull-requests: write
  security-events: write
  # [Mandatory If using OIDC authentication protocol instead of JF_ACCESS_TOKEN]
  # id-token: write
jobs:
  scan-repository:
    runs-on: public-ubuntu-latest-8-cores
    strategy:
      matrix:
        branch: ["main"]
    steps:        
      - uses: jfrog/frogbot@v2
        env:
          # JFrog platform URL
          JF_URL: ${{ secrets.JF_URL }}

          # JFrog access token with 'read' permissions on Xray service
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

          # The GitHub access token with 'read/write' permissions to the repository (for opening or commenting on PRs).
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # The name of the branch on which Frogbot will perform the scan
          JF_GIT_BASE_BRANCH: ${{ matrix.branch }}

        # [Mandatory if using OIDC authentication protocol instead of JF_ACCESS_TOKEN]
        # Insert to oidc-provider-name the 'Provider Name' defined in the OIDC integration configured in the JPD
        # with:
         # oidc-provider-name: "github-actions-oidc"
         # oidc-audience: GitHub ansys-internal CI/CD Pipelines 

         
